scalar JSON

enum STATUS {
  OK
  NOT_OK
}

type Location {
  lng: String
  lat: String
}

type Note {
  title: String
  text: String
}

type AuthorRelation implements Relation
  @config(
    name: "Author"
    foreignKey: {key: "bookId", side: User}
  )

type User @Model(dataSource: "memory", key: "users") {
  id: ID! @unique @autoGen
  username: String!
  email: String
  status: STATUS
  attributes: JSON
  location: Location
  note: [Note!]!
  # bi-one-to-one relation
  oneBook: Book @relation(with: AuthorRelation)
}

type Book @Model(dataSource: "memory", key: "books") {
  id: ID! @unique @autoGen
  name: String
  # bi-one-to-one relation
  author: User @relation(with: AuthorRelation)
}

type Team @Model(dataSource: "memory", key: "teams") {
  id: ID! @unique @autoGen
  name: String
  # uni-one-to-one relation
  onePlayer: User @relation(name: "uniPlayer", foreignKey: "one_player")
}
