scalar JSON

enum STATUS {
  OK
  NOT_OK
}

type Location {
  lng: String
  lat: String
}

type Note {
  title: String
  text: String
}

type AuthorRelation implements Relation
  @config(
    name: "Author"
    foreignKey: "theAuthor"
  )
type BooksFromEditorial implements Relation @config(
    name: "BooksFromEditorial"
    foreignKey: "editorial_book_id"
)

type User @Model(dataSource: "memory", key: "users") {
  id: ID! @unique @autoGen
  username: String!
  email: String
  status: STATUS
  attributes: JSON
  location: Location
  note: [Note!]!
  # bi-one-to-* relation
  books: [Book!]! @relation(with: AuthorRelation)
}

type Book @Model(dataSource: "memory", key: "books") {
  id: ID! @unique @autoGen
  name: String
  editorial: Editorial @relation(with: BooksFromEditorial)
  # bi-one-to-* relation
  author: User @relation(with: AuthorRelation)
}

type Editorial @Model(dataSource: "memory", key: "editorials") {
  id: ID! @unique @autoGen
  name: String
  books: [Book!]! @relation(with: BooksFromEditorial)
}

type Team @Model(dataSource: "memory", key: "teams") {
  id: ID! @unique @autoGen
  name: String
  # uni-one-to-* relation
  players: [User!]! @relation(name: "TeamPlayers", foreignKey: "_players")
}