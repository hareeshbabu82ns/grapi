import { defaultTo } from '../lodash'
import { DataModelType, isScalarType } from './type'

export default class Field {
    protected type: DataModelType;

    // type related fields
    protected nonNull: boolean;
    protected list: boolean;
    protected nonNullItem: boolean;

    // data related fields
    protected unique: boolean;
    protected readOnly: boolean;
    protected autoGen: boolean;

    private createdAt: boolean;
    private updatedAt: boolean;

    // other metadata
    protected metadata: Record<string, any> = {};

    constructor( {
        type,
        nonNull,
        list,
        nonNullItem,
        unique,
        readOnly,
        autoGen,
        createdAt,
        updatedAt,
    }: {
        type: DataModelType;
        nonNull?: boolean;
        list?: boolean;
        nonNullItem?: boolean;
        unique?: boolean;
        readOnly?: boolean;
        autoGen?: boolean;
        createdAt?: boolean;
        updatedAt?: boolean;
    } ) {
        this.type = type
        this.nonNull = defaultTo( nonNull, false )
        this.list = defaultTo( list, false )
        this.nonNullItem = defaultTo( nonNullItem, false )
        this.unique = defaultTo( unique, false )
        this.readOnly = defaultTo( readOnly, false )
        this.autoGen = defaultTo( autoGen, false )
        this.createdAt = defaultTo( createdAt, false )
        this.updatedAt = defaultTo( updatedAt, false )
    }

    public isNonNull(): boolean {
        return this.nonNull
    }

    public setNonNull( value: boolean ): void {
        this.nonNull = value
    }

    public isNonNullItem(): boolean {
        return this.nonNullItem
    }

    public setNonNullItem( value: boolean ): void {
        this.nonNullItem = value
    }

    public isList(): boolean {
        return this.list
    }

    public setList( value: boolean ): void {
        this.list = value
    }

    public setUnique( value: boolean ): void {
        this.unique = value
    }

    public isUnique(): boolean {
        return this.unique
    }

    public isReadOnly(): boolean {
        return this.readOnly
    }

    public setReadOnly( value: boolean ): void {
        this.readOnly = value
    }

    public isAutoGenerated(): boolean {
        return this.autoGen
    }

    public setAutoGen( value: boolean ): void {
        this.autoGen = value
    }

    public getType(): DataModelType {
        return this.type
    }

    public isScalar(): boolean {
        return isScalarType( this.type )
    }

    public getTypename(): string {
        return this.type.toString()
    }

    public getMetadata( key: string ): Record<string, any> {
        return this.metadata[key]
    }

    public setMetadata( key: string, value: any ): Record<string, any> {
        return this.metadata[key] = value
    }

    public isCreatedAt(): boolean {
        return this.createdAt
    }

    public setCreatedAt( value: boolean ): void {
        this.createdAt = value
    }

    public isUpdatedAt(): boolean {
        return this.updatedAt
    }

    public setUpdatedAt( value: boolean ): void {
        this.updatedAt = value
    }
}
